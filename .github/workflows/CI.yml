name: CI

on:
    pull_request:
    push:
        branches:
            - 'main'

env:
    IMAGE: ${{ vars.NCR_REGISTRY }}/lion-app
    IMAGE_TAG: ${{ vars.NCR_REGISTRY }}/lion-app:latest

jobs:
    lint:
        name: Check lint (black)
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: setup python
              uses: actions/setup-python@v4
              with:
                python-version: '3.11' 
            - name: install black
              run: pip install black
            - name: check black
              run: black --check lion_app

    build:
        needs: lint
        name: Build Image
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Set up Docker buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to NCR
              uses: docker/login-action@v2
              with:
                registry: ${{ vars.NCR_REGISTRY }}
                username: ${{ secrets.NCR_ACCESS_KEY_ID }}
                password: ${{ secrets.NCR_SECRET_KEY }}

            - name: Get current timestamp
              id: timestamp
              run: echo "timestamp=$(date '+%s')" >> "$GITHUB_OUTPUT"

            # - name: Build and Push
            #   uses: docker/build-push-action@v4
            #   with:
            #     context: lion_app
            #     tags: ${{ env.IMAGE_TAG }},"${{ env.IMAGE }}:${{ steps.timestamp.outputs.timestamp }}"
            #     push: false
            #     platforms: linux/amd64, linux/arm64/v8
            
            - name: Build
              run: |
                 docker build -t test-lion:test lion_app
            
            # db: sqlite3
            - name: Run Test
              run: |
                docker run -d -e DJANGO_SETTINGS_MODULE=lion_app.settings.test \
                --name test \
                test-lion:test python --version
                docker exec test ls -l lion_app/settings
                docker exec test python manage.py test

            - name: post test
              if: ${{ always() }}
              run: |
                docker stop test && docker rm test